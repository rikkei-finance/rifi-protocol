
Test "Borrow some BAT and enters BAT if BAT not entered"
    NewCointroller price:1.0
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Give rBAT 10e18 BAT -- Faucet some bat to borrow
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX
    Borrow Geoff 1e18 rBAT
    Assert Equal (rToken rBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance rBAT) (Exactly 9e18)
    Assert Equal (Cointroller MembershipLength Geoff) (Exactly 2)
    Assert True (Cointroller CheckMembership Geoff rZRX)
    Assert True (Cointroller CheckMembership Geoff rBAT)

Test "Borrow some BAT fails, but user still entered"
    NewCointroller price:1.0
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX
    Invariant Static (Bep20 BAT TokenBalance Geoff)
    Invariant Static (Bep20 BAT TokenBalance rBAT)
    AllowFailures
    Borrow Geoff 1e18 rBAT
    Assert Failure TOKEN_INSUFFICIENT_CASH BORROW_CASH_NOT_AVAILABLE
    Assert Equal (Cointroller MembershipLength Geoff) (Exactly 2)
    Assert True (Cointroller CheckMembership Geoff rZRX)
    Assert True (Cointroller CheckMembership Geoff rBAT)

Test "Borrow some BAT fails when no BAT available"
    NewCointroller price:1.0
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX rBAT
    Invariant Static (RToken rZRX ExchangeRateStored)
    AllowFailures
    Borrow Geoff 1e18 rBAT
    Assert Failure TOKEN_INSUFFICIENT_CASH BORROW_CASH_NOT_AVAILABLE

Test "Borrow fails if market not listed"
    NewCointroller price:1.0
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Give rBAT 10e18 BAT -- Faucet some bat to borrow
    Support rZRX collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX
    AllowFailures
    Borrow Geoff 1e18 rBAT
    Assert Failure COINTROLLER_REJECTION BORROW_COINTROLLER_REJECTION MARKET_NOT_LISTED

Test "Borrow some BAT from Excess Cash"
    Invariant Success
    NewCointroller price:1.0
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Give rBAT 10e18 BAT -- Faucet some bat to borrow
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX rBAT
    Borrow Geoff 1e18 rBAT
    Assert Equal (rToken rBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance rBAT) (Exactly 9e18)

Test "Borrow some BAT reverts if borrow is paused"
    NewCointroller price:1.0
    Cointroller SetPauseGuardian Coburn
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Give rBAT 10e18 BAT -- Faucet some bat to borrow
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX rBAT
    From Coburn (Cointroller SetGuardianMarketPaused rBAT "Borrow" True)
    AllowFailures
    Borrow Geoff 1e18 rBAT
    Assert Revert "revert borrow is paused"
    Assert Equal (rToken rBAT BorrowBalance Geoff) 0
    Assert Equal (Bep20 BAT TokenBalance Geoff) 0
    Assert Equal (Bep20 BAT TokenBalance rBAT) (Exactly 10e18)
    Cointroller SetGuardianMarketPaused rBAT "Borrow" False
    Borrow Geoff 1e18 rBAT
    Assert Equal (rToken rBAT BorrowBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance Geoff) (Exactly 1e18)
    Assert Equal (Bep20 BAT TokenBalance rBAT) (Exactly 9e18)
