-- NewCointroller, but with markets listed so that we can make them rifi markets in constructor
Macro FlywheelCointroller price=1.0 borrowRate=0.000005 rifiInitAmount=5000000e18
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    ----g2
    CointrollerImpl Deploy ScenarioG2 CointrollerScenG2
    Unitroller SetPendingImpl CointrollerScenG2
    CointrollerImpl CointrollerScenG2 BecomeG2
    --list some tokens
    Cointroller SetPriceOracle (PriceOracleProxy Address)
    Cointroller SetMaxAssets 20
    Cointroller SetCloseFactor 0.5
    Cointroller LiquidationIncentive 1.1
    NewRToken ZRX rZRX
    NewRToken BAT rBAT
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    -- final
    CointrollerImpl Deploy ScenarioG3 CointrollerScen
    Unitroller SetPendingImpl CointrollerScen
    CointrollerImpl CointrollerScen BecomeG3 1e18 [rZRX rBAT]
    Bep20 Deploy Standard RIFI "RIFI Token" 18
    Give (Address Cointroller) rifiInitAmount RIFI
    Cointroller Send "setRifiAddress(address)" (Address RIFI)

Macro InitSpeeds
    Prep Geoff 100e18 ZRX rZRX
    Mint Geoff 50e18 rZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT rBAT
    Mint Coburn 6e18 rBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn rBAT
    Borrow Coburn 1e18 rZRX
    Cointroller RefreshRifiSpeeds

Test "Accrue RIFI during a mint"
    FlywheelCointroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Mint Geoff 1e18 rZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Assert Equal (Cointroller RifiSupplyState rZRX "index") 1.2000000000001e49
    Assert Equal (Cointroller RifiSupplyState rZRX "block") 300000
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 300000e18
    Assert Equal (Cointroller RifiSupplierIndex rZRX Geoff) 1.2000000000001e49

Test "Accrue RIFI during a borrow"
    FlywheelCointroller
    InitSpeeds
    Cointroller FastForward 300000 Blocks
    Assert Equal (Cointroller RifiAccrued Coburn) 0
    Borrow Coburn 0.1e18 rZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Cointroller RifiAccrued Coburn) 0
    Assert Equal (Cointroller RifiBorrowState rZRX "index") 3.00001e41
    Assert Equal (Cointroller RifiBorrowState rZRX "block") 300000
    Assert Equal (Bep20 RIFI TokenBalance Coburn) 300000e18
    Assert Equal (Cointroller RifiBorrowerIndex rZRX Coburn) 3.00001e41

Test "Accrue RIFI during a redeem"
    FlywheelCointroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Redeem Geoff 1e9 rZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Assert Equal (Cointroller RifiSupplyState rZRX "index") 1.2000000000001e49
    Assert Equal (Cointroller RifiSupplyState rZRX "block") 300000
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 300000e18
    Assert Equal (Cointroller RifiSupplierIndex rZRX Geoff) 1.2000000000001e49

Test "Accrue RIFI during a repayBorrow"
    FlywheelCointroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Prep Coburn 0.5e18 ZRX rZRX
    RepayBorrow Coburn 0.5e18 rZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (Cointroller RifiAccrued Coburn) 0
    Assert Equal (Cointroller RifiBorrowState rZRX "index") 3.00001e41
    Assert Equal (Cointroller RifiBorrowState rZRX "block") 300000
    Assert Equal (Bep20 RIFI TokenBalance Coburn) 300000e18
    Assert Equal (Cointroller RifiBorrowerIndex rZRX Coburn) 3.00001e41

Test "Accrue RIFI during a repayBorrowBehalf of 0"
    FlywheelCointroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    -- confirm we can init all flywheel accounts for free
    RepayBorrowBehalf Jared Coburn 0 rZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 = 3.00001e41
    Assert Equal (Cointroller RifiAccrued Coburn) 0
    Assert Equal (Cointroller RifiBorrowState rZRX "index") 3.00001e41
    Assert Equal (Cointroller RifiBorrowState rZRX "block") 300000
    Assert Equal (Bep20 RIFI TokenBalance Coburn) 300000e18
    Assert Equal (Cointroller RifiBorrowerIndex rZRX Coburn) 3.00001e41

Test "Accrue RIFI during a liquidation"
    FlywheelCointroller
    InitSpeeds
    Assert Equal (Cointroller RifiSpeed rZRX) 1e18
    Assert Equal (Cointroller RifiSpeed rBAT) 0
    --coburn zrx borrow, bat supply. geoff zrx supply
    FastForward 600000 Blocks--1e18 borrow * (1 + 600000 * 0.000005) = 3.5e18 borrow > 6e18 collateral * 0.5 CF
    Prep Geoff Some ZRX rZRX
    From Geoff (RToken rZRX Liquidate Coburn rBAT 0.5e18)
    -- zrx borrow index is updated and rifi distributed
    -- * new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- * new index = 1e36 + 600000 * 1e18 * 1e36 / 1e18 = 6.00001E41
    Assert Equal (Cointroller RifiBorrowState rZRX "index") 6.00001e41
    Assert Equal (Cointroller RifiBorrowState rZRX "block") 600000
    -- zrx supply index isnt updated and rifi isnt distributed for zrx supply
    Assert Equal (Cointroller RifiSupplyState rZRX "index") 1e36
    Assert Equal (Cointroller RifiSupplyState rZRX "block") 0
    Assert Equal (Cointroller RifiSupplierIndex rZRX Geoff) 1e36--no change, minted in init
    -- bat supply/borrow index is not updated, since there is no rifi speed
    Assert Equal (Cointroller RifiSupplyState rBAT "index") 1e36
    Assert Equal (Cointroller RifiSupplyState rBAT "block") 600000
    -- neither is borrow state. block is 0 because update fn is never even called
    Assert Equal (Cointroller RifiBorrowState rBAT "index") 1e36
    Assert Equal (Cointroller RifiBorrowState rBAT "block") 0
    --
    Assert Equal (Cointroller RifiSupplierIndex rBAT Coburn) 1e36
    Assert Equal (Cointroller RifiBorrowerIndex rZRX Coburn) 6.00001e41
    Assert Equal (Bep20 RIFI TokenBalance Coburn) 600000e18
    Assert Equal (Cointroller RifiAccrued Coburn) 0
    --
    Assert Equal (Cointroller RifiSupplierIndex rBAT Geoff) 1e36
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 0
    Assert Equal (Cointroller RifiAccrued Geoff) 0

Test "Accrue RIFI during a transfer"
    FlywheelCointroller
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 0
    Assert Equal (Cointroller RifiSupplierIndex rZRX Geoff) 1e36
    Transfer Geoff Jared 2.5e10 rZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 300000e18
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Assert Equal (Cointroller RifiSupplyState rZRX "index") 1.2000000000001e49
    Assert Equal (Cointroller RifiSupplyState rZRX "block") 300000
    Assert Equal (Cointroller RifiSupplierIndex rZRX Geoff) 1.2000000000001e49
    --
    Assert Equal (Cointroller RifiAccrued Jared) 0
    Assert Equal (Cointroller RifiSupplyState rZRX "index") 1.2000000000001e49
    Assert Equal (Cointroller RifiSupplyState rZRX "block") 300000
    Assert Equal (Cointroller RifiSupplierIndex rZRX Jared) 1.2000000000001e49

Test "Accrues correctly when market is added, deactivated, and activated again"
    FlywheelCointroller
    InitSpeeds
    NewRToken DAI rDAI
    --
    Support rDAI collateralFactor:0.5
    Cointroller AddRifiMarkets rDAI
    Assert Equal (Cointroller GetRifiMarkets) [(Address rZRX) (Address rBAT) (Address rDAI)]
    Prep Jared Some DAI rDAI
    Mint Jared 6e18 rDAI
    EnterMarkets Geoff rZRX
    Borrow Geoff 0.5e18 rDAI
    Borrow Coburn 0.5e18 rDAI
    Cointroller RefreshRifiSpeeds
    Assert Equal (Cointroller RifiSpeed rZRX) 0.5e18
    Assert Equal (Cointroller RifiSpeed rDAI) 0.5e18
    --
    FastForward 100 Blocks
    Cointroller DropRifiMarket rDAI
    Cointroller ClaimRifi Geoff
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 75e18--half of cdai, all of zrx(.25e18 + .5e18) * 100
    Assert Equal (Cointroller GetRifiMarkets) [(Address rZRX) (Address rBAT)]
    Assert Equal (Cointroller RifiSpeed rZRX) 1e18
    Assert Equal (Cointroller RifiSpeed rDAI) 0
    --
    FastForward 100 Blocks
    Cointroller ClaimRifi Geoff
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 175e18-- += 1e18 * 100
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    --
    Cointroller AddRifiMarkets rDAI
    FastForward 100 Blocks
    Cointroller ClaimRifi Geoff
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 250e18--half of cdai, all of zrx. += (.25 + .5) * 100
    Assert Equal (Cointroller RifiAccrued Geoff) 0

Test "TransferRifi handles running out of RIFI in Cointroller correctly"
    FlywheelCointroller price:1.0 borrowRate:0.000005 rifiInitAmount:1e18
    InitSpeeds
    FastForward 2 Blocks
    Cointroller ClaimRifi Geoff
    Assert Equal (Cointroller RifiAccrued Geoff) 2e18
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 0
    Give (Address Cointroller) 1e18 RIFI
    Cointroller ClaimRifi Geoff
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 2e18

Test "Changing RIFI rate continues to distribute at the correct speed"
    FlywheelCointroller
    InitSpeeds
    --
    Assert Equal (Cointroller RifiSpeed rZRX) 1e18
    FastForward 10 Blocks
    Cointroller SetRifiRate 2e18
    Assert Equal (Cointroller RifiSpeed rZRX) 2e18
    FastForward 10 Blocks
    Cointroller ClaimRifi Geoff
    Assert Equal (Cointroller RifiAccrued Geoff) 0
    Assert Equal (Bep20 RIFI TokenBalance Geoff) 30e18
