
Pending "TODO: Add Back Tether Tests"
    -- Nothing

-- Skip all Tether fork tests for now, they take *forever*
-- Macro ForkTether
--     Alias TetherAdmin "0xC6CDE7C39eB2f0F0095F41570af89eFC2C1Ea828"
--     Alias TetherAddress "0xdAC17F958D2ee523a2206206994597C13D831ec7"
--     Alias TetherHolder "0x1062a747393198f70f71ec65a582423dba7e5ab3"
--     Alias EmptyAddress "0x0000000000000000000000000000000000000032" -- an arbitrary address with no tether balance
--     Web3Fork "https://mainnet.infura.io/v3/e1a5d4d2c06a4e81945fca56d0d5d8ea@8872548" (TetherHolder TetherAdmin)

-- Test "Vanilla transfer works"
--     ForkTether
--     Bep20 Deploy ExistingTether USDT TetherAddress
--     Expect Changes (Bep20 USDT TokenBalance TetherHolder) -1e8
--     Assert Equal (Bep20 USDT TokenBalance EmptyAddress) 0e8
--     From TetherHolder (Bep20 USDT Transfer EmptyAddress 1e8)
--     Assert Equal (Bep20 USDT TokenBalance EmptyAddress) 1e8

-- Test "Fee transfer works as expected"
--     ForkTether
--     Bep20 Deploy ExistingTether USDT TetherAddress
--      From TetherAdmin (Bep20 USDT SetFee 10 10)
--     Expect Changes (Bep20 USDT TokenBalance TetherHolder) -1e8
--     Expect Changes (Bep20 USDT TokenBalance TetherAdmin) +0.001e8
--     Assert Equal (Bep20 USDT TokenBalance EmptyAddress) 0e8
--     From TetherHolder (Bep20 USDT Transfer EmptyAddress 1e8)
--     Assert Equal (Bep20 USDT TokenBalance EmptyAddress) 0.999e8

-- Test "Mint should work and not change exchange rate"
--     ForkTether
--     NewCointroller price:1.0
--     Bep20 Deploy ExistingTether USDT TetherAddress
--     NewRTokenBringBEP20 USDT rUSDT
--     From TetherAdmin (Bep20 USDT SetFee 10 10)
--     Invariant Static (RToken rUSDT ExchangeRate)
--     Support rUSDT
--     From TetherHolder (Bep20 USDT Approve rUSDT 1e8)
--     Mint TetherHolder 1e8 rUSDT
--     Assert Equal (BEP20 USDT TokenBalance rUSDT) 0.999e8

-- Test "Should be able to redeem a fee RToken, exchange Rate should not change"
--     ForkTether
--     NewCointroller price:1.0
--     Bep20 Deploy ExistingTether USDT TetherAddress
--     NewRTokenBringBEP20 USDT rUSDT
--     From TetherAdmin (Bep20 USDT SetFee 10 10)
--     Support rUSDT
--     Invariant Static (RToken rUSDT ExchangeRate)
--     From TetherHolder (Bep20 USDT Approve rUSDT 1e8)
--     Mint TetherHolder 1e8 rUSDT
--     Redeem Torrey (Bep20 rUSDT TokenBalance TetherHolder) rUSDT

-- Test "Repay borrow should work and not change exchange rate"
--     ForkTether
--     PricedCointroller
--     Bep20 Deploy ExistingTether USDT TetherAddress
--     NewRTokenBringBEP20 USDT rUSDT
--     NewRToken ZRX rZRX 0.000005 2e9 8 Standard
--     PriceOracle SetPrice rZRX 1.0
--     PriceOracle SetPrice rUSDT 1.0
--     Support rZRX 0.5
--     Support rUSDT 0.5
--     Invariant Static (RToken rUSDT ExchangeRate)
--     --
--     From TetherHolder (Bep20 USDT Approve rUSDT 1e8)
--     Mint TetherHolder 1e8 rUSDT
--     From TetherAdmin (Bep20 USDT SetFee 10 10)
--     --
--     Prep Torrey 100e8 ZRX rZRX
--     Mint Torrey 100e8 rZRX
--     EnterMarkets Torrey rUSDT
--     EnterMarkets Torrey rZRX
--     Borrow Torrey 1e8 rUSDT -- we only received 0.999e8 tether bc of fee
--     Assert Equal (BEP20 USDT TokenBalance Torrey) 0.999e8
--     FastForward 199600 Blocks -- 1e8 * 199800 * 0.000005 = 0.998e8 interest accrued
--     Assert Equal (RToken rUSDT TotalBorrowsCurrent) 1.998e8
--     From TetherHolder (Bep20 USDT Transfer Torrey 2e8)
--     From Torrey (Bep20 USDT Approve rUSDT 2e8)
--     RepayBorrow Torrey 2e8 rUSDT -- repay more than we owe to account for fee
--     Assert Equal (RToken rUSDT BorrowBalance Torrey) 0
--     Assert Equal (RToken rUSDT TotalBorrowsCurrent) 0
--     --Assert Equal (BEP20 USDT TokenBalance Torrey) 0

-- Test "Should be able to liquidate Tether token borrow"
--     ForkTether
--     PricedCointroller
--     Cointroller LiquidationIncentive 1.1
--     Bep20 Deploy ExistingTether USDT TetherAddress-- FYI tether is 6 decimals
--     NewRTokenBringBEP20 USDT rUSDT
--     NewRToken ZRX rZRX 0.000005 2e9 8 Standard
--     PriceOracle SetPrice rZRX 1.0
--     PriceOracle SetPrice rUSDT 1e12
--     Support rZRX 0.5
--     Support rUSDT 0.5
--     Invariant Static (RToken rUSDT ExchangeRate)
--     -- Give some Tether to rUSDT
--     From TetherHolder (Bep20 USDT Approve rUSDT 2e8)
--     Mint TetherHolder 2e8 rUSDT
--     From TetherAdmin (Bep20 USDT SetFee 10 10)
--     -- Prep our Tether borrower
--     Prep Torrey 2e18 ZRX rZRX
--     Mint Torrey 2e18 rZRX
--     EnterMarkets Torrey rUSDT
--     EnterMarkets Torrey rZRX
--     Borrow Torrey 1e6 rUSDT -- fyi we only received 0.999e8 tether bc of fee
--     Assert Equal (BEP20 USDT TokenBalance Torrey) 0.999e6
--     FastForward 199600 Blocks -- 1e6 * 199800 * 0.000005 = 0.998e6 interest accrued
--     Assert Equal (RToken rUSDT TotalBorrowsCurrent) 1.998e6
--     -- ok.. ready the liquidator
--     From TetherHolder (Bep20 USDT Transfer Coburn 2e6) -- should give 1.001001001
--     From Coburn (Bep20 USDT Approve rUSDT 2e6)
--     Liquidate Coburn "->" Torrey 0.1e6 rUSDT "Seizing" rZRX
--     -- 5.4945e7 = (1e18 / 1e6) * 0.1e6 (amt liquidated) * 1.1 (liq discount) * .999 (fee) / 2e9 (exchange rate)
--     Assert Equal (Bep20 rZRX TokenBalance Coburn) 5.4945e7
--     Assert Equal (RToken rUSDT BorrowBalance Torrey) 1.8981e6 -- 1.998 - (.1 * .999) was liquidated
