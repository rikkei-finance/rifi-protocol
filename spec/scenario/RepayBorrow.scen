-- Tests for repaying borrows

Macro NewBorrow borrowAmount borrowRate
    NewCointroller price:1.0 -- TODO: This should really be a price for a specific asset
    NewRToken ZRX rZRX
    NewRToken BAT rBAT borrowRate -- note: cannot use macros with named args right now
    Give rBAT 10e18 BAT -- Faucet some bat to borrow
    Support rZRX collateralFactor:0.5
    Support rBAT collateralFactor:0.5
    Prep Geoff Some ZRX rZRX
    Mint Geoff 100e18 rZRX
    EnterMarkets Geoff rZRX rBAT
    Borrow Geoff borrowAmount rBAT

Test "Borrow, hold a few blocks, and repay part"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token
    From Geoff (Bep20 BAT Approve rBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 rBAT
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Bep20 BAT TokenBalance Geoff) Zero
    Assert Equal (Bep20 BAT TokenBalance rBAT) 10e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 3e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 3e18

Test "Borrow, hold a few blocks, and repay full"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    Give Geoff 1.5e18 BAT -- Geoff had the 1.0e18 borrowed BAT
    From Geoff (Bep20 BAT Approve rBAT 2.5e18)
    RepayBorrow Geoff 2.5e18 rBAT
    Assert Equal (RToken rBAT BorrowBalance Geoff) 0e18
    -- Let's check the overall numbers
    Assert Equal (Bep20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 11.5e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 0e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 0e18

Test "Borrow, hold a few blocks, and repay too much"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT rBAT
    Expect Changes (Bep20 BAT TokenBalance Geoff) Zero
    Expect Changes (Bep20 BAT TokenBalance rBAT) Zero
    RepayBorrow Geoff 10e18 rBAT
    Assert Revert "revert REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED"
    -- Let's check the overall numbers
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 2.5e18

Test "Borrow, and get a negative total cash situation"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 9e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 1e18 * (1 + 9800000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 50e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 50e18
    -- Now let's repay one full token
    From Geoff (Bep20 BAT Approve rBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 rBAT
    Assert Equal (RToken rBAT BorrowBalance Geoff) 49e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 49e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 10e18

Test "Borrow, hold a few blocks, and repay behalf part"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token from another user
    Prep Torrey 1.0e18 BAT rBAT
    RepayBorrowBehalf Torrey Geoff 1.0e18 rBAT
    Assert Equal (RToken rBAT BorrowBalance Torrey) Zero
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Bep20 BAT TokenBalance Torrey) 0e18
    Assert Equal (Bep20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Bep20 BAT TokenBalance rBAT) 10e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Torrey) Zero
    Assert Equal (RToken rBAT BorrowBalance Geoff) 3e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 3e18

Test "Prohibit repay by cointroller rejection due to mock unlist"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT rBAT
    Expect Changes (Bep20 BAT TokenBalance Geoff) Zero
    Expect Changes (Bep20 BAT TokenBalance rBAT) Zero
    Cointroller UnList rZRX -- Mock unlist ZRX
    RepayBorrow Geoff 2.5e18 rZRX
    Assert Failure COINTROLLER_REJECTION REPAY_BORROW_COINTROLLER_REJECTION MARKET_NOT_LISTED
    -- Let's check the overall numbers
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient allowance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 100e18 BAT rBAT allowanceAmount:1.5e18
    Expect Changes (Bep20 BAT TokenBalance Geoff) Zero
    Expect Changes (Bep20 BAT TokenBalance rBAT) Zero
    RepayBorrow Geoff 2.5e18 rBAT
    Assert Revert "revert Insufficient allowance"
    -- Let's check the overall numbers
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient balance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (RToken rBAT BorrowBalance Geoff) 1e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 0e18 BAT rBAT allowanceAmount:2.5e18
    Expect Changes (Bep20 BAT TokenBalance Geoff) Zero
    Expect Changes (Bep20 BAT TokenBalance rBAT) Zero
    RepayBorrow Geoff 2.5e18 rBAT
    Assert Revert "revert Insufficient balance"
    -- Let's check the overall numbers
    Assert Equal (RToken rBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (RToken rBAT TotalBorrowsCurrent) 2.5e18
